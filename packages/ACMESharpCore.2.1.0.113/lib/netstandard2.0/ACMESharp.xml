<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ACMESharp</name>
    </assembly>
    <members>
        <member name="T:ACMESharp.AcmeAccount">
            <summary>
            Represents the details of a registered ACME Account with a specific ACME CA.
            </summary>
        </member>
        <member name="P:ACMESharp.AcmeAccount.Kid">
            <summary>
            This is the Key Identifier used in most messages sent to the ACME CA after
            the initial Account registration.  It references the public key that was
            registered with the Account in the JWS-signed Account create message.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-6.2
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            <para>
            The KID is returned as a <c>Location</c> header in the Account
            creation response.
            </para>
            </remarks>
            <returns></returns>
        </member>
        <member name="P:ACMESharp.AcmeAccount.Id">
            <summary>
            CA-assigned unique identifier for the Account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ACMESharp.Authorizations.AuthorizationDecoder.DecodeChallengeValidation(ACMESharp.Protocol.Resources.Authorization,System.String,ACMESharp.Crypto.JOSE.IJwsTool)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-8
            </remarks>
        </member>
        <member name="M:ACMESharp.Authorizations.AuthorizationDecoder.ResolveChallengeForDns01(ACMESharp.Protocol.Resources.Authorization,ACMESharp.Protocol.Resources.Challenge,ACMESharp.Crypto.JOSE.IJwsTool)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-8.4
            </remarks>
        </member>
        <member name="M:ACMESharp.Authorizations.AuthorizationDecoder.ResolveChallengeForHttp01(ACMESharp.Protocol.Resources.Authorization,ACMESharp.Protocol.Resources.Challenge,ACMESharp.Crypto.JOSE.IJwsTool)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-8.3
            </remarks>
        </member>
        <member name="M:ACMESharp.Authorizations.AuthorizationDecoder.ResolveChallengeForTlsAlpn01(ACMESharp.Protocol.Resources.Authorization,ACMESharp.Protocol.Resources.Challenge,ACMESharp.Crypto.JOSE.IJwsTool)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-tls-alpn-05
            </remarks>
        </member>
        <member name="T:ACMESharp.Authorizations.Dns01ChallengeValidationDetails">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-8.4
            </summary>
        </member>
        <member name="T:ACMESharp.Authorizations.Http01ChallengeValidationDetails">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-8.3
            </summary>
        </member>
        <member name="T:ACMESharp.Authorizations.TlsAlpn01ChallengeValidationDetails">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-tls-alpn-05
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.Base64Tool">
            <summary>
            Collection of convenient crypto operations working
            with URL-safe Base64 encoding.
            </summary>
        </member>
        <member name="M:ACMESharp.Crypto.Base64Tool.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            URL-safe Base64 encoding as prescribed in RFC 7515 Appendix C.
            </summary>
        </member>
        <member name="M:ACMESharp.Crypto.Base64Tool.UrlEncode(System.Byte[])">
            <summary>
            URL-safe Base64 encoding as prescribed in RFC 7515 Appendix C.
            </summary>
        </member>
        <member name="M:ACMESharp.Crypto.Base64Tool.UrlDecode(System.String)">
            <summary>
            URL-safe Base64 decoding as prescribed in RFC 7515 Appendix C.
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.CryptoHelper">
            <summary>
            For the most compatibility with LE, see:
              https://letsencrypt.org/docs/integration-guide/#supported-key-algorithms
            We should support:
            * RSA Keys (2048-4096 bits)
            * ECDSA Keys (P-256, P-384)
            
            Thats' for both account keys and cert keys.
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.CryptoHelper.Base64">
            <summary>
            Returns a singleton instance of cryptographic tool
            for URL-safe Base64 encoding.
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.CryptoHelper.Rsa">
            <summary>
            Returns a singleton instance of cryptographic tool
            for working with RSA keys and algorithms.
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.CryptoHelper.Ec">
            <summary>
            Returns a singleton instance of cryptographic tool
            for working with EC keys and algorithms.
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.EcTool">
            <summary>
            Collection of convenient crypto operations working
            with Elliptic Curve keys and algorithms.
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.JOSE.IJwsTool">
            <summary>
            Defines the interface for a tool that provides the required
            JOSE Web Signature (JWS) functions as used by the ACME protocol.
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.JOSE.Impl.ESJwsTool">
            <summary>
            JWS Signing tool implements ES-family of algorithms as per
            http://self-issued.info/docs/draft-ietf-jose-json-web-algorithms-00.html#SigAlgTable
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.JOSE.Impl.ESJwsTool.HashSize">
            <summary>
            Specifies the size in bits of the SHA-2 hash function to use.
            Supported values are 256, 384 and 512.
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.JOSE.Impl.ESJwsTool.Curve">
            <summary>
            Specifies the elliptic curve to use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ACMESharp.Crypto.JOSE.Impl.ESJwsTool.CurveName">
            <summary>
            As per:  https://tools.ietf.org/html/rfc7518#section-6.2.1.1
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.JOSE.Impl.ESJwsTool.ExportDetails">
            <summary>
            Format for an internal representation of string-based export/import.
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.JOSE.Impl.RSJwsTool">
            <summary>
            JWS Signing tool implements RS-family of algorithms as per
            http://self-issued.info/docs/draft-ietf-jose-json-web-algorithms-00.html#SigAlgTable
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.JOSE.Impl.RSJwsTool.HashSize">
            <summary>
            Specifies the size in bits of the SHA-2 hash function to use.
            Supported values are 256, 384 and 512.
            </summary>
        </member>
        <member name="P:ACMESharp.Crypto.JOSE.Impl.RSJwsTool.KeySize">
            <summary>
            Specifies the size in bits of the RSA key to use.
            Supports values in the range 2048 - 4096 inclusive.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ACMESharp.Crypto.JOSE.JwsHeaders">
            <summary>
            Contains the well-defined headers elements as specified in RFC7515.
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.ALG">
            <summary>
            RFC7515 4.1.1.  "alg" (Algorithm) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.JKU">
            <summary>
            RFC7515 4.1.2.  "jku" (JWK Set URL) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.JWK">
            <summary>
            RFC7515 4.1.3.  "jwk" (JSON Web Key) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.KID">
            <summary>
            RFC7515 4.1.4.  "kid" (Key ID) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.X5U">
            <summary>
            RFC7515 4.1.5.  "x5u" (X.509 URL) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.X5C">
            <summary>
            RFC7515 4.1.6.  "x5c" (X.509 Certificate Chain) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.X5T">
            <summary>
            RFC7515 4.1.7.  "x5t" (X.509 Certificate SHA-1 Thumbprint) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.X5TS56">
            <summary>
            RFC7515 4.1.8.  "x5t#S256" (X.509 Certificate SHA-256 Thumbprint) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.TYP">
            <summary>
            RFC7515 4.1.9.  "typ" (Type) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.CTY">
            <summary>
            RFC7515 4.1.10.  "cty" (Content Type) Header Parameter
            </summary>
        </member>
        <member name="F:ACMESharp.Crypto.JOSE.JwsHeaders.CRIT">
            <summary>
            RFC7515 4.1.11.  "crit" (Critical) Header Parameter
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.JOSE.JwsHelper">
            <summary>
            A helper class to support JSON Web Signature (JWS) operations as needed for ACME.
            </summary>
            <remarks>
            ACME only requires a subset of JWS functionality, such as only requiring support
            for the <see href="https://tools.ietf.org/html/rfc7515#section-7.2.2">Flattened
            JWS JSON Serialization</see> format, and so this helper class' scope and
            implementation of JWS is limited to those features required for ACME.
            </remarks>
        </member>
        <member name="M:ACMESharp.Crypto.JOSE.JwsHelper.SignFlatJsonAsObject(System.Func{System.Byte[],System.Byte[]},System.String,System.Object,System.Object)">
            <summary>
            Computes a JSON Web Signature (JWS) according to the rules of RFC 7515 Section 5.
            </summary>
            <param name="sigFunc"></param>
            <param name="payload"></param>
            <param name="protectedHeaders"></param>
            <param name="unprotectedHeaders"></param>
            <returns>Returns a signed, structured object containing the input payload.</returns>
        </member>
        <member name="M:ACMESharp.Crypto.JOSE.JwsHelper.ComputeThumbprint(ACMESharp.Crypto.JOSE.IJwsTool,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Computes a thumbprint of the JWK using the argument Hash Algorithm
            as per <see href="https://tools.ietf.org/html/rfc7638">RFC 7638</see>,
            JSON Web Key (JWK) Thumbprint.
            </summary>
        </member>
        <member name="M:ACMESharp.Crypto.JOSE.JwsHelper.ComputeKeyAuthorization(ACMESharp.Crypto.JOSE.IJwsTool,System.String)">
            <summary>
            Computes the ACME Key Authorization of the JSON Web Key (JWK) of an argument
            Signer as prescribed in the
            <see href="https://tools.ietf.org/html/draft-ietf-acme-acme-01#section-7.1"
            >ACME specification, section 7.1</see>.
            </summary>
        </member>
        <member name="M:ACMESharp.Crypto.JOSE.JwsHelper.ComputeKeyAuthorizationDigest(ACMESharp.Crypto.JOSE.IJwsTool,System.String)">
            <summary>
            Computes a SHA256 digest over the <see cref="M:ACMESharp.Crypto.JOSE.JwsHelper.ComputeKeyAuthorization(ACMESharp.Crypto.JOSE.IJwsTool,System.String)"
            >ACME Key Authorization</see> as required by some of the ACME Challenge
            responses.
            </summary>
        </member>
        <member name="T:ACMESharp.Crypto.RsaTool">
            <summary>
            Collection of convenient crypto operations working
            with RSA keys and algorithms.
            </summary>
        </member>
        <member name="T:ACMESharp.HTTP.Link">
            <summary>
            Represents a Link header value that represents the well-defined HTTP response
            entity header
            <see href="https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Response_fields"><c>Link</c></see>
            and more fully specified in
            <see href="https://tools.ietf.org/html/rfc5988#section-5">RFC 5988 Section 5</see>.
            </summary>
            <remarks>
            This class only implements a subset of the mechanics and nuances of the Link header
            field as necessary for implementing the ACME protocol.
            </remarks>
        </member>
        <member name="F:ACMESharp.HTTP.Link.LinkHeaderRegex">
            <summary>
            Regex pattern to match and extract the components of an HTTP related link header.
            </summary>
        </member>
        <member name="T:ACMESharp.HTTP.LinkCollection">
            <summary>
            A collection of HTTP header <see cref="T:ACMESharp.HTTP.Link">Link</see> objects.
            </summary>
            <remarks>
            This collection implements multiple generic-typed enumerable interfaces
            but for backward compatibility, the default implemenation, i.e. the
            IEnumerable non-generic implementation, returns a sequence of strings
            which are the complete, formatted Link values.
            </remarks>
        </member>
        <member name="M:ACMESharp.HTTP.LinkCollection.#ctor(System.Collections.Generic.IEnumerable{ACMESharp.HTTP.Link})">
            <param name="links">It's OK to provide a null value.</param>
        </member>
        <member name="M:ACMESharp.HTTP.LinkCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <param name="linkValues">It's OK to provide a null value.</param>
        </member>
        <member name="T:ACMESharp.Logging.NullLogger">
            <summary>
            Implementation of the logger interface that does nothing.
            </summary>
            <remarks>
            Provides a default, do-nothing implementation.
            </remarks> 
        </member>
        <member name="T:ACMESharp.Protocol.AccountDetails">
            <summary>
            An aggregation of Account details including resource payload and ancillary,
            associated data.
            </summary>
            <remarks>
            This represents a superset of details that are included in responses
            to several ACME operations regarding an ACME Account, such as Account
            registration, update, key rotation and deactivation.
            </remarks>
        </member>
        <member name="T:ACMESharp.Protocol.AcmeProtocolClient">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.AcmeProtocolClient._usePostAsGet">
            <summary>
            To implement Let's Encrypt protocol change per RFC 8555,
            read announcement here: 
            https://community.letsencrypt.org/t/acme-v2-scheduled-deprecation-of-unauthenticated-resource-gets/74380
            </summary>
        </member>
        <member name="P:ACMESharp.Protocol.AcmeProtocolClient.Signer">
            <summary>
            A tool that can be used to JWS-sign request messages to the
            target ACME server.
            </summary>
            <remarks>
            If not specified during construction, a default signing tool
            with a new set of keys will be constructed of type ES256
            (Elliptic Curve using the P-256 curve and a SHA256 hash).
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetDirectoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the Directory object from the target ACME CA.  The Directory is used
            to help clients configure themselves with the right URLs for each ACME operation.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.1
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetTermsOfServiceAsync(System.Threading.CancellationToken)">
            <summary>
            Convenience routine to retrieve the raw bytes of the Terms of Service
            endpoint defined in an ACME Resource Directory meta details.
            </summary>
            <returns>Returns a tuple containing the content type, the filename as best
                    can be determined by the response headers or the request URL, and
                    the raw content bytes; typically this might resolve to a PDF file</returns>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetNonceAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a fresh nonce to be used in subsequent communication
            between the client and target ACME CA.  The client might
            sometimes need to get a new nonce, e.g., on its first request
            to the server or if an existing nonce is no longer valid.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.2
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.CreateAccountAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.CheckAccountAsync(System.Threading.CancellationToken)">
            <summary>
            Verifies that an Account exists in the target ACME CA that is associated
            associated with the current Account Public Key.  If the check succeeds,
            the returned Account  object will <b>only</b> have its <c>Kid</c>
            property populated -- all other fields will be empty.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3.1
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3.3
            <para>
            If the Account does not exist, then an exception is thrown.
            </para>
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.UpdateAccountAsync(System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates existing Account information registered with the ACME CA.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3.2
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3.3
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3.4
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.ChangeAccountKeyAsync(ACMESharp.Crypto.JOSE.IJwsTool,System.Threading.CancellationToken)">
            <summary>
            Rotates the current Public key that is associated with this Account by the
            target ACME CA with a new Public key.  If successful, updates the current
            Account key pair registered with the client.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-18#section-7.3.5
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.DeactivateAccountAsync(System.Threading.CancellationToken)">
            <summary>
            Deactivates the current Account associated with this client.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3.7
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.CreateOrderAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a new Order for a Certificate which will contain one or more
            DNS Identifiers.  The first Identifier will be treated as the primary
            subject of the certificate, and any optional subsequent Identifiers
            will be treated as Subject Alterative Name (SAN) entries.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.4
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.3
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetOrderDetailsAsync(System.String,ACMESharp.Protocol.OrderDetails,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current status and details of an existing Order.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.4
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.3
            <para>
            You can optionally pass in an existing Order details object if this
            is refreshing the state of an existing one, and some values that
            don't change, but also are not supplied in subsequent requests, such
            as the Order URL, will be copied over.
            </para>
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetAuthorizationDetailsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of an Authorization associated with a previously
            created Order.  The Authorization details URL is returned as part of
            an Order's response.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.5
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.4
            <para>
            Use this operation to retrieve the initial details of an Authorization,
            such as immediately after creating a new Order, as well as to retrieve
            the subsequent state and progress of an Authorization, such as as after
            responding to an associated Challenge.
            </para>
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.DeactivateAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deactivates a specific Authorization and thereby relinquishes the
            authority to issue Certificates for the associated Identifier.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.5.2
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetChallengeDetailsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.5.1
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.AnswerChallengeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.5.1
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.FinalizeOrderAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.4
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetOrderCertificateAsync(ACMESharp.Protocol.OrderDetails,System.Threading.CancellationToken)">
            <summary>
            Convenience routine to retrieve the raw Certificate bytes (PEM encoded)
            associated with a finalized ACME Order.
            </summary>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.RevokeCertificateAsync(System.Byte[],ACMESharp.Protocol.Resources.RevokeReason,System.Threading.CancellationToken)">
            <summary>
            Revoke certificate
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-18#section-7.6
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generic fetch routine to retrieve raw bytes from a URL associated
            with an ACME endpoint.
            </summary>
            <param name="relativeUrl">The URL to fetch which may be relative to the ACME
                    endpoint associated with this client instance</param>
            <param name="cancel">Optional cancellation token</param>
            <returns>A tuple containing the content type and the raw content bytes</returns>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.SendAcmeAsync(System.Uri,System.Net.Http.HttpMethod,System.Object,System.Net.HttpStatusCode[],System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken,System.String)">
            <summary>
            The workhorse routine for submitting HTTP requests using ACME protocol
            semantics and activating pre- and post-submission event hooks.
            </summary>
            <param name="uri">URI to send to</param>
            <param name="method">HTTP Method to use, defaults to <c>GET</c></param>
            <param name="message">Optional request payload, will be JSON-serialized</param>
            <param name="expectedStatuses">Any HTTP response statuses that can be interpretted
                    as successful, defaults to <c>OK (200)</c>; other response statuses will
                    trigger an exception; you can also skip response status checking by supplying
                    a zero-length array value here</param>
            <param name="skipNonce">If true, will not expect and extract a Nonce header in the
                    response, defaults to <c>false</c></param>
            <param name="skipSigning">If true, will not sign the request with the associated
                    Account key, defaults to <c>false</c></param>
            <param name="includePublicKey">If true, will include the Account's public key in the
                    payload signature instead of the Account's key ID as prescribed with certain
                    ACME protocol messages, defaults to <c>false</c></param>
            <param name="cancel">Optional cancellation token</param>
            <param name="opName">Name of operation, will be auto-populated with calling method
                    name if unspecified</param>
            <returns>The returned HTTP response message, unaltered, after inspecting the
                    response details for possible error or problem result</returns>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.SendAcmeAsync``1(System.Uri,System.Net.Http.HttpMethod,System.Object,System.Net.HttpStatusCode[],System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken,System.String)">
            <summary>
            Convenience variation of <see cref="M:ACMESharp.Protocol.AcmeProtocolClient.SendAcmeAsync(System.Uri,System.Net.Http.HttpMethod,System.Object,System.Net.HttpStatusCode[],System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken,System.String)"/> that deserializes
            and returns an expected type from the response content JSON.
            </summary>
            <remarks>
            All parameter semantics work as described in <see cref="M:ACMESharp.Protocol.AcmeProtocolClient.SendAcmeAsync(System.Uri,System.Net.Http.HttpMethod,System.Object,System.Net.HttpStatusCode[],System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken,System.String)"/>.
            </remarks>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.DecodeAccountResponseAsync(System.Net.Http.HttpResponseMessage,ACMESharp.Protocol.AccountDetails)">
            <summary>
            Decodes an HTTP response, including the JSON payload and the ancillary HTTP data,
            into Account details.
            </summary>
            <param name="resp"></param>
            <param name="existing">Optionally, provide a previously decoded Account object
                    whose elements will be re-used as necessary to populate the new result
                    Account object; some ACME Account operations do not return the full
                    details of an existing Account</param>
            <returns></returns>
        </member>
        <member name="M:ACMESharp.Protocol.AcmeProtocolClient.ComputeAcmeSigned(System.Object,System.String,ACMESharp.Crypto.JOSE.IJwsTool,System.Boolean,System.Boolean)">
            <summary>
            Computes the JWS-signed ACME request body for the given message object
            and the current or input <see cref="P:ACMESharp.Protocol.AcmeProtocolClient.Signer"/>.
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.UserAgentHeaderValue">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-6.1
            </summary>
            <remarks>
            Computed dynamically at assembly load to incorporate the full.
            </remarks>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.AcceptLanguageHeaderValue">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-6.1
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.ContentTypeHeaderName">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-6.2
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.JsonContentTypeHeaderValue">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-6.2
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.ErrorTypeNamespacePrefix">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-6.6
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.ReplayNonceHeaderName">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.2
            </summary>
        </member>
        <member name="F:ACMESharp.Protocol.Constants.TosLinkHeaderRelationKey">
            <summary>
            The Link Header Relation key used to identify a URL to the Terms-Of-Service.
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.CheckAccountRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.CreateAccountRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.CreateOrderRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.4
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.DeactivateAccountRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.DeactivateAuthorizationRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.5.2
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.FinalizeOrderRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.KeyChangeRequest">
            <summary>
            Based on:
              https://tools.ietf.org/html/draft-ietf-acme-acme-18#section-7.3.5
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.RevokeCertificateRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-18#section-7.6
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Messages.UpdateAccountRequest">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="P:ACMESharp.Protocol.Messages.UpdateAccountRequest.Contact">
            <summary>
            The list of contact URLs.  Although a request to create a brand new account
            requires this value, when used in a request to lookup an existing account
            this property can be omitted.
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.OrderDetails">
            <summary>
            An aggregation of Order details including resource payload and ancillary,
            associated data.
            </summary>
            <remarks>
            This represents a superset of details that are included in responses
            to several ACME operations regarding an ACME Order, such as 
            Order creation and finalization.
            </remarks>
        </member>
        <member name="T:ACMESharp.Protocol.Resources.Account">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.2
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Resources.Authorization">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.4
            </summary>
        </member>
        <member name="P:ACMESharp.Protocol.Resources.Challenge.Validated">
            <summary>
            The time at which the server validated this challenge,
            encoded in the format specified in RFC 3339 [RFC3339].
            This field is REQUIRED if the "status" field is "valid".
            </summary>
        </member>
        <member name="P:ACMESharp.Protocol.Resources.Challenge.ValidationRecord">
            <summary>
            Details of successful validation.
            </summary>
            <remarks>
            TODO:  This does not appear to be documented in the latest ACMEv2 draft
            but experimentation shows a record such as this:
            <code>
               "validationRecord": [
                   {
                     "hostname": "foo.example.com"
                   }
               ]
            </code>
            There also does not appear to be any indication of the "validated
            </remarks>
        </member>
        <member name="P:ACMESharp.Protocol.Resources.Challenge.Error">
            <summary>
            Error that occurred while the server was validating the challenge,
            if any, structured as a problem document [RFC7807]. Multiple
            errors can be indicated by using subproblems Section 6.6.1.
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Resources.Order">
            <summary>
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.3
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.3
            </summary>
        </member>
        <member name="T:ACMESharp.Protocol.Resources.ProblemType">
            <summary>
            Defines standard ACME errors.
            </summary>
            <remarks>
            https://tools.ietf.org/html/draft-ietf-acme-acme-18#section-6.7
            </remarks>
        </member>
        <member name="T:ACMESharp.Protocol.Resources.RevokeReason">
            <summary>
            Reasons for revocation
            https://tools.ietf.org/html/rfc5280#section-5.3.1
            </summary>
        </member>
        <member name="P:ACMESharp.Protocol.Resources.ServiceDirectory.NewAuthz">
            <summary>
            This is an optional resource that an ACME CA may support
            if it supports Pre-Authorizations.
            https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.4.1
            </summary>
        </member>
    </members>
</doc>
